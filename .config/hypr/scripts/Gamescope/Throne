#!/bin/bash
# Script pour lancer des jeux via Gamescope avec optimisations et Untapped.gg
SCRIPTSDIR="$HOME/.config/hypr/scripts"
SCRIPT_NAME=$(basename "$0")

# ======= OPTIONS DE CONFIGURATION =======
GAMESCOPE_OPTIONS="True"  # True / False     Enable Gamescope or Disable
GAME_PERF="True"          # True / False     Enable Game Performance or Disable
GAME_VRR="False"          # True / False     Enable VRR or Disable  
ANIMATION="True"          # True / False     Disable Animation 
MANGOHUD_OPTION="True"    # True / False     Enable MangoHUD or Disable
OPTION_AFTER=""           # Option after %command% ex: "--launcher-skip --nojoy"
LANG_KEY="fr"             # fr / en / de / es / it / ja / ko / zh / ur

# ======= PARAMÈTRES GÉNÉRAUX =======
# Variables d'environnement --HYPRLAND--
MONITOR="DP-2"        # Out Monitor
RESOLUTION="3440x1440" # Resolution 
REFRESH_RATE="165"    # Refresh rate
POSITION="0x0"        # Position
SCALE="1"             # Scale   

# Paramètres pour gamescope
RES_WIDTH=3440        # Resolution width
RES_HEIGHT=1440       # Resolution height
FSR="True"            # True / False    Enable FSR or Disable


# ======= CONFIGURATION EN FONCTION DES OPTIONS =======
# Configuration de Gamescope
if [ "$FSR" = "True" ]; then
    FSR_MODE="-F fsr"
else
    FSR_MODE=""
fi

if [ "$GAMESCOPE_OPTIONS" = "True" ]; then
    export XKB_DEFAULT_LAYOUT=$LANG_KEY
    GAMESCOPE_SET="gamescope -W $RES_WIDTH -H $RES_HEIGHT -r $REFRESH_RATE $FSR_MODE --force-grab-cursor --"
else
    GAMESCOPE_SET=""
fi

# Configuration de Game Performance
if [ "$GAME_PERF" = "True" ]; then
    GAME_PERF_SET="game-performance" # If no Cachyos change for game-mode 
else
    GAME_PERF_SET=""
fi

# Configuration de MangoHUD
if [ "$MANGOHUD_OPTION" = "True" ]; then
    export MANGOHUD=1
else
    export MANGOHUD=0
fi

# ======= FONCTION POUR ACTIVER/DÉSACTIVER LE MODE JEU HYPRLAND =======
enable_hyprland_gamemode() {
    if [ "$ANIMATION" = "True" ]; then
        # Désactive les animations et autres effets visuels
        hyprctl --batch "\
            keyword animations:enabled 0;\
            keyword decoration:shadow:enabled 0;\
            keyword decoration:blur:enabled 0;\
            keyword general:gaps_in 0;\
            keyword general:gaps_out 0;\
            keyword general:border_size 1;\
            keyword decoration:rounding 0"
        
        # Assure l'opacité complète pour toutes les fenêtres
        hyprctl keyword "windowrule opacity 1 override 1 override 1 override, ^(.*)$"
        swww kill
    fi
}

disable_hyprland_gamemode() {
    if [ "$ANIMATION" = "True" ]; then
        echo "Restoring Hyprland animations and visual effects..."
        
        # Redémarre le daemon de fond d'écran si nécessaire
        if ! pgrep -x "swww" > /dev/null; then
            swww-daemon --format xrgb && swww img "$HOME/.config/rofi/.current_wallpaper" &
            sleep 1
            hyprctl reload
        fi
        
    fi
}

# ======= CONFIGURATION ENVIRONNEMENT =======
# Variables d'environnement communes --ENVIRONMENT-- "AMD"
export RADV_PERFTEST=gpl
export mesa_glthread=true
export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1

# ======= LAUNCH THE GAME =======
# Enable VRR if requested
if [ "$GAME_VRR" = "True" ]; then
    echo "Enabling VRR for $MONITOR..."
    notify-send -e -u normal " Enabling VRR Hyprland "
fi

# Active le mode jeu Hyprland avant de lancer le jeu
enable_hyprland_gamemode

# Notification de lancement
notify-send -e -u normal " Launching the game $SCRIPT_NAME"

# Lancement du jeu en arrière-plan
$GAME_PERF_SET $GAMESCOPE_SET "$@" $OPTION_AFTER &
GAME_PID=$!

# Wait a moment to let the game window appear
sleep 3

# Detect the game's window class dynamically
if [ "$GAME_VRR" = "True" ]; then
    GAME_WINDOW_CLASS=$(hyprctl clients | grep -A 3 "pid: $GAME_PID" | grep "class:" | awk '{print $2}')
    if [ -n "$GAME_WINDOW_CLASS" ]; then
        echo "Applying tearing rule for window class: $GAME_WINDOW_CLASS"
        hyprctl keyword windowrulev2 "immediate, class:$GAME_WINDOW_CLASS"
    else
        echo "Failed to detect game window class."
    fi
fi

# Wait for the game process to exit
wait $GAME_PID
GAME_EXIT_CODE=$?

# Remove the window rule after the game closes
if [ "$GAME_VRR" = "True" ] && [ -n "$GAME_WINDOW_CLASS" ]; then
    echo "Removing tearing rule for window class: $GAME_WINDOW_CLASS"
    hyprctl keyword windowrulev2 "unset, class:$GAME_WINDOW_CLASS"
    
    # Disable VRR
    echo "Disabling VRR for $MONITOR..."
    notify-send -e -u normal " Disabling VRR Hyprland "
    hyprctl keyword monitor "$MONITOR,${RESOLUTION}@${REFRESH_RATE},${POSITION},${SCALE},vrr,0"
fi

# Désactive le mode jeu Hyprland après la fermeture du jeu
disable_hyprland_gamemode

# Exit with the game's exit code
exit $GAME_EXIT_CODE
